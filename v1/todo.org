* fix unknown class id
** check let Extenv call
** testclass.gf
* finish constructor
** fo-let/fo-fun using %slots/%methods
* add super support
** extend slots/methods with supers
** how to call super method?
* test fo-fun default case
** use T as id
* add class macro based on fo-let/fun
** call to instantiate
* add str fmt
** add Fmt type
** trigger in ReadStr if non-escaped %
** use Read to get expr
** store as Vec
** eval/print in Eval
** use to add msg id in fo-fun fail
** convert test-prim to macro
* add Iter
** vec, int, str, chan
** add Char type (rune)
** switch reduce/fold to use iters
** switch vec reverse to use iter

* fold readme
* expand readme
* implement Fun/Macro Clone
** clone envs
* build/coro.gf
* use type switch where applicable
** grep "\.("
