* add Env
** add (this-env) fun
* switch wraps to pass by value
** return new instead of modify
* add WrapType.Wrap()
** use to default imp Eval/Expand/Quote etc.
* enable env-qualified ids
*** if id contains '/' followed by more chars, perform double (env/val) lookup
*** set env as current
**** start clean if no prefix
** reimplement testgui.gf
*** lib/eos.gf
* add Pair type
** pass by value
** ReadPair x:y
** add Env iter
* add thread macro (~)
** inject first arg into remaining
** add/use (vec!) to allow bare ids
* tpipe t@-test
** put tpipe first
* add tflat
** recursive tcat
* add tsep
** put separator between items
* implement Fun/Macro Clone
** clone envs
* add chan iter
* add str iter
** add char type (rune)
* add iters to readme

(let e (let (foo 1 bar 2) (this/)))

(e/do (let baz 3))

(dump e)

(let ee (/let qux 42)))

(dump ee)
