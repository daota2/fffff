* dup parent type envs when deriving
** move (iter) to SeqType
** update lib/tests
* add Env iter
** return key and val separately
** copy Vec
*** (while (do (let v (pop in)) (not (_? v)))
* add iter readme
* ---
* add do/let/set/vals to type envs
** (Int/let foo 'bar)
** BasicType.Init
* move bench/find-key/test to lib
* move new-sym to Sym/new
* move Type methods into .env
** switch args from Type to *Type
** convert fields/methods to bindings
** change val funcs to lookup methods
* ---
* demo/abs.gf
** add sim arg to run
*** forward this-sim
** add sim.pressure 
*** use if tank is empty
*** use if no port.io
** run until t1 is empty
** add dt arg to sim/run

contextual programming

* add sql plugin

https://github.com/Masterminds/squirrel
https://www.sqlite.org/autoinc.html

(sql/Table users
  (name Str)
  (active? Bool)
  (pk (Key name)))

(sql/Table feeds
  (name Str)
  (pk (Key name)))

(sql/Table posts
  (id Id)
  (feed (Rec feeds))
  (author (Rec users))
  (body Str)
  (pk (Key id)))
